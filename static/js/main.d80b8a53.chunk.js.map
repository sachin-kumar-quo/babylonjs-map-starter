{"version":3,"sources":["CuboidWithTexture.js","App.js","index.js"],"names":["CuboidWithTexture","props","canvasRef","useRef","canvasId","antialias","engineOptions","adaptToDeviceRatio","sceneOptions","onRender","onSceneReady","rest","screenshot","_objectWithoutProperties","_excluded","useEffect","current","engine","Engine","scene","Scene","isReady","onReadyObservable","addOnce","runRenderLoop","render","resize","getEngine","window","addEventListener","dispose","removeEventListener","React","createElement","Object","assign","className","id","ref","_regeneratorRuntime","exports","Op","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","defaultCenter","App","box","_useState","useState","_useState2","_slicedToArray","setScreenshot","mapRef","_handleScreenshot","_asyncToGenerator","_callee","_mapRef$current","map","canvas","dataurl","_context","leafletElement","html2canvas","getContainer","useCORS","allowTaint","toDataURL","apply","arguments","Map","center","zoom","TileLayer","url","attribution","onClick","href","camera","FreeCamera","Vector3","setTarget","Zero","getRenderingCanvas","attachControl","HemisphericLight","intensity","MeshBuilder","CreateBox","size","position","y","texture","Texture","material","StandardMaterial","diffuseTexture","deltaTimeInMillis","getDeltaTime","rotation","Math","PI","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d80b8a53.chunk.js","sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport {\r\n  Engine,\r\n  Scene} from \"@babylonjs/core\";\r\n\r\nfunction CuboidWithTexture(props) {\r\n  const canvasRef = useRef(null);\r\n  const {\r\n    canvasId,\r\n    antialias,\r\n    engineOptions,\r\n    adaptToDeviceRatio,\r\n    sceneOptions,\r\n    onRender,\r\n    onSceneReady,\r\n    screenshot,\r\n    ...rest\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    if (!canvasRef.current) return;\r\n    const engine = new Engine(\r\n      canvasRef.current,\r\n      antialias,\r\n      engineOptions,\r\n      adaptToDeviceRatio\r\n    );\r\n    const scene = new Scene(engine, sceneOptions);\r\n    if (scene.isReady()) {\r\n      onSceneReady(scene);\r\n    } else {\r\n      scene.onReadyObservable.addOnce(onSceneReady);\r\n    }\r\n    engine.runRenderLoop(() => {\r\n      onRender(scene);\r\n      scene.render();\r\n    });\r\n\r\n    const resize = () => {\r\n      scene.getEngine().resize();\r\n    };\r\n\r\n    if (window) {\r\n      window.addEventListener(\"resize\", resize);\r\n    }\r\n\r\n    return () => {\r\n      scene.getEngine().dispose();\r\n\r\n      if (window) {\r\n        window.removeEventListener(\"resize\", resize);\r\n      }\r\n    };\r\n  }, [\r\n    antialias,\r\n    engineOptions,\r\n    adaptToDeviceRatio,\r\n    sceneOptions,\r\n    onRender,\r\n    onSceneReady\r\n  ]);\r\n\r\n  return <canvas className=\"canvas\" id={canvasId} ref={canvasRef} {...rest} />;\r\n}\r\nexport default CuboidWithTexture;","import React, { useRef, useState } from \"react\";\nimport { Map, TileLayer } from \"react-leaflet\";\nimport html2canvas from \"html2canvas\";\nimport \"./App.css\";\nimport \"leaflet/dist/leaflet.css\";\nimport CuboidWithTexture from \"./CuboidWithTexture\";\n\nimport {\n  FreeCamera,\n  HemisphericLight,\n  MeshBuilder,\n  Vector3,\n  Texture,\n  StandardMaterial\n} from \"@babylonjs/core\";\n\nconst defaultCenter = [38.9072, -77.0369];\nconst defaultZoom = 8;\n\nfunction App() {\n  const [screenshot, setScreenshot] = useState();\n  const mapRef = useRef();\n\n  let box;\n\n  const onSceneReady = (scene) => {\n    var camera = new FreeCamera(\n      \"camera1\",\n      new Vector3(0, 5, -10),\n      scene\n    );\n    camera.setTarget(Vector3.Zero());\n    const canvas = scene.getEngine().getRenderingCanvas();\n    camera.attachControl(canvas, true);\n    var light = new HemisphericLight(\n      \"light\",\n      new Vector3(0, 1, 0),\n      scene\n    );\n    light.intensity = 0.7;\n    box = MeshBuilder.CreateBox(\"cuboid\", { size: 3 }, scene);\n    box.position.y = 1;\n    const texture = new Texture(screenshot, scene);\n    const material = new StandardMaterial(\"texture\", scene);\n    material.diffuseTexture = texture;\n    box.material = material;\n  };\n\n  const onRender = (scene) => {\n    if (box !== undefined) {\n      var deltaTimeInMillis = scene.getEngine().getDeltaTime();\n\n      const rpm = 10;\n      box.rotation.y +=\n        (rpm / 60) * Math.PI * 2 * (deltaTimeInMillis / 1000);\n    }\n  };\n\n  async function handleScreenshot() {\n    const { current = {} } = mapRef;\n    const { leafletElement: map } = current;\n    const canvas = await html2canvas(map.getContainer(), {\n      useCORS: true,\n      allowTaint: true\n    });\n    let dataurl = canvas.toDataURL(\"image/png\");\n    setScreenshot(dataurl);\n  }\n\n  return (\n    <div className=\"App\">\n      <Map ref={mapRef} center={defaultCenter} zoom={defaultZoom}>\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n        />\n      </Map>\n      <div className=\"sidebar\">\n        <p>\n          <button onClick={handleScreenshot}>Take Screenshot</button>\n        </p>\n      </div>\n      {screenshot && (\n        <div className=\"modal\">\n          <div className=\"close\" ><a href=\"#\" className=\"cross\" onClick={()=>setScreenshot(null)}/></div>\n          <CuboidWithTexture\n            canvasId=\"babylon-canvas\"\n            antialias\n            onSceneReady={onSceneReady}\n            onRender={onRender}\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}